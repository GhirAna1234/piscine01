This algorithm computes power using simple recursion.
Algorithm (Recursive Approach)

    Base Case:
        If n=0n=0, return 1 (since x0=1x0=1).
    Recursive Case:
        If n>0n>0, return x * power(x, n - 1).

Algorithm in Steps

Power(x, n):
  If n = 0:
    Return 1  // Base case
  Else:
    Return x * Power(x, n - 1)  // Recursive call

Example Execution for Power(2, 4)

power(2, 4) → 2 * power(2, 3)
power(2, 3) → 2 * power(2, 2)
power(2, 2) → 2 * power(2, 1)
power(2, 1) → 2 * power(2, 0)
power(2, 0) → 1 (Base case)